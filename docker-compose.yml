version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_AUTH_URL=http://localhost:8001
    depends_on:
      - api-gateway
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - app-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:8001
      - USER_SERVICE_URL=http://user-service:8002
      - STUDENT_SERVICE_URL=http://student-service:8003
      - REPORT_SERVICE_URL=http://report-service:8004
      - ASSESSMENT_FORM_SERVICE_URL=http://assessment-form-service:8005
    depends_on:
      - auth-service
      - user-service
      - student-service
      - report-service
      - assessment-form-service
    networks:
      - app-network

  # Authentication Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/auth_db
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_EXPIRES_IN=24h
    depends_on:
      - mongodb
    networks:
      - app-network

  # User Management Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/user_db
    depends_on:
      - mongodb
    networks:
      - app-network

  # Student & Assessment Service
  student-service:
    build:
      context: ./backend/student-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/student_db
    depends_on:
      - mongodb
    networks:
      - app-network

  # Reporting Service
  report-service:
    build:
      context: ./backend/report-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/report_db
    depends_on:
      - mongodb
    networks:
      - app-network

  # Assessment Form Service
  assessment-form-service:
    build:
      context: ./backend/assessment-form-service
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/assessment_form_db
    depends_on:
      - mongodb
    networks:
      - app-network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - app-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  mongodb_data:
  redis_data:

networks:
  app-network:
    driver: bridge